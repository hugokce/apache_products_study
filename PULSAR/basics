Öncelikle docker imageını çekelim

docker pull apachepulsar/pulsar
docker pull apachepulsar/pulsar:latest

Temmuz 2022 2.9.3 en son tag idi
docker run -it -p 6650:6650  -p 8080:8080 --mount source=pulsardata,target=/pulsar/data --mount source=pulsarconf,target=/pulsar/conf apachepulsar/pulsar:2.9.3 bin/pulsar standalone
10 layer var

docker exec -it pulsar /bin/bash  (5)

bin/pulsar-admin clusters list 
çıktı olarak standalone yazar

bin/pulsar-admin clusters get standalone dersek 

{
  "serviceUrl" : "http://localhost:8080",
  "brokerServiceUrl" : "pulsar://localhost:6650",
  "brokerClientTlsEnabled" : false,
  "tlsAllowInsecureConnection" : false,
  "brokerClientTlsEnabledWithKeyStore" : false,
  "brokerClientTlsTrustStoreType" : "JKS"
}

bin/pulsar-admin tenants list      çıktı olarak 
"public"
"pulsar"
"sample"
verir


 bin/pulsar-admin namespaces list public   çıktı olarak
"public/default"
"public/functions"
2 adet namespace varmış public tenants altında.
Topic oluştururken tenant vermezsek public altında oluşur

investments adında tenants oluşturalım sonra listeleyip görelim
bin/pulsar-admin tenants create --admin-roles admin --allowed-clusters standalone investments
bin/pulsar-admin tenants list
"investments"
"public"
"pulsar"
"sample"

bin/pulsar-admin tenants get investments  alttaki çıktıyı verir adminRoleü ve clustersı zaten tanımlamıştık
{
  "adminRoles" : [ "admin" ],
  "allowedClusters" : [ "standalone" ]
}

Namespace oluşturalım
bin/pulsar-admin namespaces create investments/stocks

şimdi oluştu mu bakalım.
bin/pulsar-admin namespaces list investments
"investments/stocks"  verir

bin/pulsar-admin topics list investments/stocks dersek
topic olmadığını görürüz

İlk topicimizi oluşturalım
bin/pulsar-admin topics create persistent://investments/stocks/stocks-ticker

bin/pulsar-admin topics list investments/stocks

"persistent://investments/stocks/stocks-ticker"  olarak döner

İlk consumerı oluşturalım yeni bir terminal açalım
bin/pulsar-client consume -s "test-subs" -n 0 persistent://investments/stocks/stocks-ticker

bin/pulsar-client produce persistent://investments/stocks/stocks-ticker -k AAPL -m "{"date":632700000000,"name":"AAPL","open":1.22,"close":1.22,"high":1.23,"low":1.2,"volume":2367300.0}" -s "\n"
producer mesaj üretildi
2022-07-22T15:47:09,017+0000 [main] INFO  org.apache.pulsar.client.cli.PulsarClientTool - 1 messages successfully produced

consumerda mesaj geldi bilgilerini aldık
----- got message -----
key:[AAPL], properties:[], content:{date:632700000000,name:AAPL,open:1.22,close:1.22,high:1.23,low:1.2,volume:2367300.0}
2022-07-22T15:47:07,917+0000 [pulsar-timer-5-1] INFO  org.apache.pulsar.client.impl.ConsumerStatsRecorderImpl - [persistent://investments/stocks/stocks-ticker] [test-subs] [d89de] Prefetched messages: 0 --- Consume throughput received: 0.02 msgs/s --- 0.00 Mbit/s --- Ack sent rate: 0.02 ack/s --- Failed messages: 0 --- batch messages: 0 ---Failed acks: 0



producer
./bin/pulsar-client produce -m "Hello World" persistent://sample/standalone/ns1/helloworld

consumer
./bin/pulsar-client consume -n 0 -s sub persistent://sample/standalone/ns1/helloworld (4)
mesaj gelince Hello World yazar


Kaynak
1-https://pulsar.apache.org/docs/standalone-docker/
2-https://hub.docker.com/r/apachepulsar/pulsar/tags
3-https://www.youtube.com/watch?v=H88re4p-DoU&t=1547s
4-https://www.youtube.com/watch?v=h3wylHdvs-g
5-https://www.youtube.com/watch?v=w2dzxQfAiZM
6-https://pulsar.apache.org/docs/sql-getting-started
7-https://pulsar.apache.org/docs/client-libraries-python/
8-https://pulsar.apache.org/docs/admin-api-topics/





